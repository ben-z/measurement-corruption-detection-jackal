<launch>
  <arg name="enable_detector" default="true" doc="Enable the detector node" />

  <!-- Launch the controller -->
  <node pkg="bcontrol" type="controller.py" name="bcontrol_node" output="log" required="true"/>

  <!-- Launch the planner -->
  <node pkg="bcontrol" type="planner.py" name="bplan_node" output="log" required="true"/>

  <!-- Launch the detector -->
  <include file="$(find bcontrol)/launch/detector.launch" if="$(eval arg('enable_detector'))" />

  <!-- Launch nodes that support the detector pipeline -->
  <include file="$(find bcontrol)/launch/detector_pipeline.generated.launch" />

  <!-- Publish a zero odometry message. This is useful for setting the lateral velocity to 0 in robot_localization. -->
  <node name="zero_odom_publisher" pkg="topic_tools" type="transform" required="true" args="/jackal_velocity_controller/odom /zero_odom nav_msgs/Odometry 'nav_msgs.msg.Odometry(header=m.header,child_frame_id=m.child_frame_id)' --import nav_msgs" />

  <!-- Publish the global localization message in the odom frame. -->
  <node name="global_localization_odom_republisher" pkg="bcontrol" type="tf_republish.py" required="true" output="screen">
    <param name="topic" value="/global_localization/robot/odom/vulnerable"/>
    <param name="output_topic" value="/global_localization/robot/odom/vulnerable/odom_frame"/>
    <param name="target_frame" value="odom"/>
    <param name="message_type" value="nav_msgs.msg.Odometry"/>
  </node>

  <!--
    Publish the map->odom transform based on global position messages.

    Directly transform global measurements to tf (no filtering).
    This can produce jumps in the map->odom transform when the global measurements are updated.

    More info: https://discourse.ros.org/t/map-base-odom-as-alternative-for-rep-105-recommended-frame-order/25095
  -->
  <!-- <node name="map_to_odom_publisher" pkg="map_to_odom_publisher" type="map_to_odom_publisher" output="log" required="true">
    <param name="odom_topic" value="/global_localization/robot/odom/vulnerable/uncorrupted"/> -->
    <!-- <param name="odom_topic" value="/global_localization/robot/odom"/> -->
    <!-- <param name="publish_frequency" value="50"/>
  </node> -->

  <!-- EKF (global) -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_global" clear_params="true" required="true" output="screen">
    <rosparam command="load" file="$(find bcontrol)/config/robot_localization.global.yaml" />
    <remap from="odometry/filtered" to="/odometry/global_filtered" />
  </node>

  <!-- EKF (local) -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_local" clear_params="true" required="true" output="screen">
    <rosparam command="load" file="$(find bcontrol)/config/robot_localization.local.yaml" />
    <remap from="odometry/filtered" to="/odometry/local_filtered" />
  </node>
</launch>