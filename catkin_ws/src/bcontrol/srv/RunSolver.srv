# Request

# === enum Solver
int8 L0=10 # L0 optimization
int8 L1=11 # L1 optimization
# === End enum Solver

# All arrays are to be flattened using column-major (Fortran, or "F") order
int32 n
int32 q
int32 N
float64[] Phi # shape: (qN, n)
float64[] Y # shape: (qN,)
# bound for measurement error
float64[] eps # shape: (1,) or (q,)
int8 solver # enum Solver
int32 max_num_corruptions # maximum number of corruptions to solve for. -1 means no limit
bool[] sensor_protection # shape: (q,). Denotes whether each sensor is protected

---
# Response

# === enum SolutionStatus
int8 SUCCESS=50
int8 NO_SOLUTION=51
int8 AMBIGUOUS_SOLUTION=52
int8 OTHER_FAILURE=53
# === End enum SolutionStatus

int8 status # SolutionStatus enum
float64[] x0_hat # shape: (n,)
bool[] sensor_validity # shape: (q,)
float32[] malfunction_max_magnitude # shape: (q,)